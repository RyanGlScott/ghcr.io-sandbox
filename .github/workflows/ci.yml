name: ghcr.io-sandbox
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE: ghcr.io/ryanglscott/ghcr.io-sandbox
  DOCKER_CACHE_IMAGE: ghcr.io/ryanglscott/cache-ghcr.io-sandbox

jobs:
  build-image:
    runs-on: ${{ matrix.os }}
    if: github.repository_owner == 'RyanGlScott'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: rlespinasse/github-slug-action@v5

      - id: common-tag
        run: |
          echo "::set-output name=common-tag::$GITHUB_REF_SLUG"
          echo "COMMON_TAG=$GITHUB_REF_SLUG" >> $GITHUB_ENV

      - uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.DOCKER_IMAGE }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.common-tag.outputs.common-tag }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true
          push: false
          file: ${{ matrix.file }}
          build-args: ${{ matrix.build-args }}
          cache-from: |
            type=registry,ref=${{ env.DOCKER_CACHE_IMAGE }}:${{ steps.prefix.outputs.prefix }}main
            type=registry,ref=${{ env.DOCKER_CACHE_IMAGE }}:${{ steps.common-tag.outputs.common-tag }}

      - name: Cache image build
        uses: docker/build-push-action@v6
        continue-on-error: true  # Tolerate cache upload failures - this should be handled better
        with:
          context: .
          file: ${{ matrix.file }}
          build-args: ${{ matrix.build-args }}
          cache-to: type=registry,ref=${{ env.DOCKER_CACHE_IMAGE }}:${{ steps.common-tag.outputs.common-tag }},mode=max

      - name: Tag Docker image
        run: docker tag ${{ env.DOCKER_IMAGE }}:$COMMON_TAG ${{ env.DOCKER_IMAGE }}:nightly-${{ runner.arch }}

      - name: Save Docker image
        run: docker save -o nightly-${{ runner.arch }}.tar ${{ env.DOCKER_IMAGE }}:nightly-${{ runner.arch }}

      - uses: actions/upload-artifact@v4
        with:
          path: nightly-${{ runner.arch }}.tar
          name: nightly-${{ runner.arch }}.tar

  push-image:
    runs-on: ubuntu-24.04
    needs: [build-image]
    if: github.repository_owner == 'RyanGlScott'
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/download-artifact@v4
        with:
          name: nightly-ARM64.tar

      - uses: actions/download-artifact@v4
        with:
          name: nightly-X64.tar

      - uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.DOCKER_IMAGE }}

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker image
        run: |
          docker load -i nightly-ARM64.tar
          docker load -i nightly-X64.tar
          docker push ${{ env.DOCKER_IMAGE }}:nightly-ARM64
          docker push ${{ env.DOCKER_IMAGE }}:nightly-X64
          docker manifest create ${{ env.DOCKER_IMAGE }}:nightly ${{ env.DOCKER_IMAGE }}:nightly-ARM64 ${{ env.DOCKER_IMAGE }}:nightly-X64
          docker manifest inspect ${{ env.DOCKER_IMAGE }}:nightly
          docker manifest push ${{ env.DOCKER_IMAGE }}:nightly
